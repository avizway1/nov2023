RDS : Relational Database Service : 7 Relational db engines.
--> Amazon Aurora	(Mysql Compatable / Postgresql Compatable)
--> MySQL
--> MS SQL	
--> PostgreSQL
--> MariaDB
--> Oracle
--> IBM Db2

______

ec2 instance --> OS Level --> Install anything --> We have to take care below things.
Licensing..??
UPgradations..?? 
Backup..??
HA/FT..??

RDS --> Everything managed by AWS.

--> We won't get any choice to login to OS level.

GUI tools to manage the Databases : 
--> Amazon Aurora : Mysql Workbench / pgadmin
--> MySQL	: Mysql Workbench
--> MS SQL	: ssms (Microsoft Sql Server Management Studio)
--> PostgreSQL	: pgadmin
--> MariaDB	: workbench
--> Oracle	: oracle tool, Toad


Create a DB Subnet Group, Add 2 private subnets from Diff AZs (ap-south-1a & ap-south-1b private Subntes).. 

Endpoint Name / Hostname : my-first-mysql-rdsdb.cfpgnjehw330.ap-south-1.rds.amazonaws.com
admin
Avinash1234

nslookup my-first-mysql-rdsdb.cfpgnjehw330.ap-south-1.rds.amazonaws.com ==> to know IP of RDS.


Enable Public Access : Yes.. DB can be accesable over the internet, We can install tools in local device and connect. 
NO : The DB instance will be available to the resources running in same VPC.


--> DB ENgine 
--> Define Username and password (admin & custom/autogenerated)
--> Storage option
--> VPC 

Version : -2 / -1 mechanism.. We don't go with latest version. 
Free Tier : Choose this
Credentials : Define Username and password (admin & custom/autogenerated)
DB Instance class : db.t2.micro
Storage : Min 20gb, Max: 16TB	: 20 GB (Free Tier)

Storage Autoscaling : AWS will add storage automatically when the existing size is 80%.
	--> 10% of existing storage
	--> 5 GB .. WHich ever is higher, AWS choose it.

COnnectivity : 
VPC : CustomVPC
Public Access : No
Port : 3306

Automatic Backup : AWS creates backups automatically.  : Disable
0 --> disable
1 --> Min 
35 --> Max
7 --> Defualt Value

--> We will get DB Endpoint to connect to db instance. We won't get any IP address for this db instances. 


mysql -h my-first-rds.cfpgnjehw330.ap-south-1.rds.amazonaws.com -u dbadmin -P 3306 -p


===========================================

If you are using Linux as jump server : 
1. install mysql : yum install mysql -y
2. connect to mysql using this command :  

mysql -h rdsendpointname -u username -P portno -p
ask for password : 


If you are using Windows as jump server : 
1. Download and install "mysql workbench", then conenct to mysql rds db.


===========================================


Task 1 : Launch an Mysql RDS db instance in CUstomVPCs Private SUbnet. Launch a Linux ec2 instance in custom VPC Public Subnet and Install Mysql workbench then connect to the RDS db instance.   (WITH LINUX)

Task 2 : use "Task 1" mysql instance for this task. Launch a windows ec2 instance in custom VPC Public Subnet and Install Mysql workbench then connect to the RDS db instance. (WITH WINDOWS)

Task 3 : Restore the shared sample db to the rds instance.  Run a SQL command to list all customer information. (SELECT * FROM db.table)


Task 4 : Launch a POSTGRE SQL RDS db instance in CUstomVPCs Private SUbnet. Launch an ec2 instance in custom VPC Public Subnet and Install PGAdmin then connect to the RDS db instance.  


================================================================================================

D: 22/12/2023

MultiAZ Deployment : Designed for Failover/FT purpose. : Creates a standby in a different Availability Zone (AZ) to provide data redundancy, eliminate I/O freezes, and minimize latency spikes during system backups.


Automated Backup : This feature creates backup copies of our RDS instances automatically.  Based on retention period, we can have backup copies in our aws env to restore. 
Disable : 0 
Min : 1 Day
Max : 35 Days

--> When we are launching db instance, it creates a backup copy automatically, if this feature is enabled. 

7 Days : AWS keeps last 7 days backup copies. 


Enhanced Monitoring : 1 Sec
Basic Monitoring : 5 Min

____

We have "Read Replica" option for scaling purpose. It works with "Master-Slave" mechanism.

Role : Instance   ||   Primary & Replica

Primary : Supports read and write
Replica : Supports only read operations

_________________

Manual Snapshots : We can create snapshots manually. These won't delete along with rds db instance.  We need to delete manually.

Automated/system snapshots : AWS creates these, We cannot delete these.


RDS won't work on In-Place restoration. Restoration happens as a new rds db instance with new endpoint.


====================================================================================================


Homegenious : mysql --> DMS --> AWS RDS Mysql
heterogenious : IBM DB2 --> SCT (Schema Convertion tool) --> DMS --> AWS RDS Mysql/aurora


Step 1 : create a DMS cluster (dms.t2.micro)
Step 2 : Create source endpoint (Create an RDS cluster, and restore the shared sample Database), test the connectivity to DMS cluster
Step 3 ; Create a Target endpoint (Create a new rds cluster) test the connectivity to DMS cluster

Step 4 : Create a Migration task using Source and target endpoints (step 2 and 3)

migrate existing data. one time.
Migrate changes only. only changes migrates.
Migrate existing and continue migration. 


-------

How to connect to Redshift : 
https://docs.aws.amazon.com/redshift/latest/mgmt/connecting-using-workbench.html
Tool Name : sql workbenh/J.


OLAP : Online Analytical process : Redshift
OLTP : Online Transactional process : RDS

Redshift: 
leader node : Designed to run query on compute nodes.
Compute Node : it stores actual data

_________________

**Cost you**

Task : launch an ec2 instance in mumbai region.. connect to it and make it as webserver.. 

Use AWS Application Migration Service (MGN) and migrate the Mumbai region ec2 instance to "Sydney" region and verify webpage.

https://www.youtube.com/watch?v=fIEwoFaXExQ

----------------------------------

Task : COST US https://aws.amazon.com/getting-started/hands-on/migrate-rdsmysql-to-auroramysql/?trk=gs_card (No free tier)


Task 3 : Install mysql workbench in your local laptop. Create a mysql rds cluster in "customvpc- Private Subnet", Now connect to this instance from your local laptop over ssh connection.
--> Launch an amazon linux 2 instance in customvpc-publicsubnet.

reference video: https://www.youtube.com/watch?v=qulcnNu8g7o

----------------------------------------------

**Exp: Mandatory

Task 2 : perform DMS Migration from Mysql to mysql with in a vpc.

Task : launch an rds mysql db instance-1.. Now export/restore the shared db... 

Launch another rds mysql db instance-2.. Migrate all the datbases and tables from Db instance-1 to db instance-2 Using DMS (Database Migration service).

1. Launch a DMS cluster
2. Create endpoints (Source and destination) and test the endpoints
3. Create a replciation job and verify.

https://www.youtube.com/watch?v=SXuOjfKpIrs


Single Digit millisecond latency at any scale of data.


{
"Sno" : "1",
"F Name" : "A",
"L name" : "b"
},
{
"Sno" : "2",
"F Name" : "c",
"L name" : "d"
},

DynamoDB Application ; https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TicTacToe.html

In-memory caching solution for DynamoDB : DAX (Database Accelerator)

RDS has a Cache solution, Solution Name is "Elasticache".
it has 2 opensource caching engines.
--> MemcacheD
--> Redis : Support authentication menthods (IAM Auth / RedisAUTH).


Neptune : Fast, reliable graph database built for the cloud.
Amazon DocumentDB : Fully-managed MongoDB-compatible database service
Amazon keySpace : Kassandra Compatable AWS database service.
Amazon QLDB : Fully Managed ledger Database.



Redshift : 






